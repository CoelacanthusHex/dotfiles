#export LANG=zh_CN.UTF-8
#export LANGUAGE=zh_CN:en_GB:en
# https://wiki.archlinux.org/title/Locale#LC_TIME:_date_and_time_format
#export LC_TIME=en_DK.UTF-8

# XDG Dirs
export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.local/share

# Workarounds for XDG base directory specification
# (https://wiki.archlinux.org/index.php/XDG_Base_Directory#Support)
# adb
export ADB_VENDOR_KEY=$XDG_DATA_HOME/adb
export ANDROID_SDK_HOME=$XDG_DATA_HOME/android-sdk
# CUDA cache
export CUDA_CACHE_PATH="$XDG_CACHE_HOME"/nv
# Bash Completion
export BASH_COMPLETION_USER_FILE="$XDG_CONFIG_HOME"/bash-completion/bash_completion
# Go
export GOPATH="$XDG_DATA_HOME"/go
export GOMODCACHE="$XDG_CACHE_HOME"/go/mod
# GHCUP
export GHCUP_USE_XDG_DIRS=1
# GTK2
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc
# Less
#export LESSKEY="$XDG_CONFIG_HOME"/less/lesskey
export LESSHISTFILE="$XDG_CACHE_HOME"/less/history
# GNU Parallel
export PARALLEL_HOME="$XDG_CONFIG_HOME"/parallel
# .ipfs for IPFS
export IPFS_PATH=$XDG_DATA_HOME/ipfs
# ipython
export IPYTHONDIR=$XDG_CONFIG_HOME/ipython
# Jupyter
# https://wiki.archlinux.org/index.php/Jupyter
export JUPYTER_CONFIG_DIR=$XDG_CONFIG_HOME/jupyter
export JUPYTERLAB_DIR=$XDG_DATA_HOME/jupyter/lab
# .m2 for Leiningen
export LEIN_HOME=$XDG_DATA_HOME/lein
# python
export PYTHONSTARTUP=$XDG_CONFIG_HOME/python/rc.py
# Python egg
export PYTHON_EGG_CACHE="$XDG_CACHE_HOME"/python-eggs
# Pylint
export PYLINTHOME="$XDG_CACHE_HOME"/pylint
# wakatime
export WAKATIME_HOME="$XDG_CONFIG_HOME"/wakatime
# Wget
export WGETRC="$XDG_CONFIG_HOME"/wget/config.ini
# Nali
export NALI_HOME=$XDG_CONFIG_HOME/nali
# NPM
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc
# .octave_hist and .octave_packages
export OCTAVE_HISTFILE="$XDG_CACHE_HOME"/octave-hsts
export OCTAVE_SITE_INITFILE="$XDG_CONFIG_HOME"/octave/octaverc
# Ripgrep
export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME"/ripgreprc
# Rustup (Rust)
export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
# Cargo (Rust)
export CARGO_HOME="$XDG_DATA_HOME"/cargo
# Stack (Haskell)
export STACK_ROOT="$XDG_DATA_HOME"/stack
# Bundle (Ruby)
export BUNDLE_USER_CONFIG="$XDG_CONFIG_HOME"/bundle
export BUNDLE_USER_CACHE="$XDG_CACHE_HOME"/bundle
export BUNDLE_USER_PLUGIN="$XDG_DATA_HOME"/bundle
# Xauthority
export XAUTHORITY="$XDG_RUNTIME_DIR"/Xauthority
# Vkd3d-proton
export VKD3D_SHADER_CACHE_PATH="$XDG_CACHE_HOME"/vkd3d-proton

# Use nano as default text editor
# (https://wiki.archlinux.org/index.php/Nano#Replacing_vi_with_nano)
export EDITOR=vim
export VISUAL=vim

# Rust src (used in CLion without rustup)
# https://wiki.archlinux.org/index.php/Rust#Racer
# https://wiki.archlinux.org/index.php/Rust#IntelliJ_IDEA
# https://wiki.archlinux.org/index.php/Rust#Kate
export RUST_SRC_PATH=/usr/lib/rustlib/src/rust/src

# Golang
export GOPROYX=https://goproxy.io,direct

# Firefox
export MOZ_USE_XINPUT2=1
[[ $XDG_SESSION_TYPE == wayland ]] && export MOZ_ENABLE_WAYLAND=1

# Environment variable for IME,
# use fcitx instead of fcitx5 for compatibility
# https://wiki.archlinux.org/index.php/Fcitx5#Set_environment_variables_for_IM_modules
[[ $XDG_SESSION_TYPE != wayland ]] && export QT_IM_MODULE=fcitx
[[ $XDG_SESSION_TYPE != wayland ]] && export GTK_IM_MODULE=fcitx
export SDL_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx
# hack for kitty
# https://github.com/kovidgoyal/kitty/issues/469#issuecomment-778814173
export GLFW_IM_MODULE=ibus

## Nvidia - vulkan is not working and can not initialize
## Check if you have vulkan-intel installed, it may prevent Nvidia's vulkan driver from being detected.
#export VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/nvidia_icd.json
#export LIBVA_DRIVER_NAME=nvidia

#export LIBVA_DRIVER_NAME=radeonsi
#export LIBVA_DRIVERS_PATH=/usr/lib/dri/
export VDPAU_DRIVER=radeonsi

# Enbale for GStreamer
# https://wiki.archlinux.org/title/GStreamer#Hardware_video_acceleration
export GST_VAAPI_ALL_DRIVERS=1

# no CSD
export GTK_CSD=0

# https://wiki.archlinux.org/title/Uniform_look_for_Qt_and_GTK_applications#Consistent_file_dialog
export GTK_USE_PORTAL=1
# In GTK 4.7.1, GDK_DEBUG=portals replace GTK_USE_PORTAL=1
if [[ -z $GDK_DEBUG ]]; then
    export GDK_DEBUG=portals
elif [[ ! $GDK_DEBUG =~ "portals" ]]; then
    export GDK_DEBUG=portals:$GDK_DEBUG
fi

# prevent Wine from changing the filetype associations on my system or adding unwanted menu entries/desktop links
# https://wiki.winehq.org/FAQ#How_can_I_prevent_Wine_from_changing_the_filetype_associations_on_my_system_or_adding_unwanted_menu_entries.2Fdesktop_links.3F
# https://t.me/archlinuxcn_group/1914093
# https://freenode.logbot.info/archlinux-cn/20210201#c6743477
# https://wiki.archlinux.org/index.php/wine#Prevent_Wine_from_creating_filetype_associations
# https://wiki.archlinux.org/index.php/wine#Unregister_existing_Wine_file_associations
export WINEDLLOVERRIDES=winemenubuilder.exe=d

# for sympy
# python-symengine: optimized backend, set USE_SYMENGINE=1 to use
# https://github.com/archlinux/svntogit-community/blob/570b7f1fe521f30a6f65b55efea7be29b287802f/trunk/PKGBUILD#L16
export USE_SYMENGINE=1

# For Mutt
export BROWSER=/usr/bin/xdg-open
export MAIL="$HOME/Mail"

# HiDPI
# since 5.6
export QT_AUTO_SCREEN_SCALE_FACTOR=1
# since 5.14
export QT_ENABLE_HIGHDPI_SCALING=1

export GAMEMODERUNEXEC=prime-run
export DXVK_CONFIG_FILE="$XDG_CONFIG_HOME/dxvk.conf"
export LUTRIS_RUNTIME=0

# Chromium OAuth
# https://gist.github.com/foutrelis/14e339596b89813aa9c37fd1b4e5d9d5
export GOOGLE_DEFAULT_CLIENT_ID="77185425430.apps.googleusercontent.com"
export GOOGLE_DEFAULT_CLIENT_SECRET="OTJgUOQcT7lO7GsGZq2G4IlT"

# https://github.com/vim/vim/pull/9639
[[ $XDG_SESSION_TYPE != wayland ]] && export GVIM_ENABLE_WAYLAND=1

export NOUVEAU_USE_ZINK=1
export NVK_I_WANT_A_BROKEN_VULKAN_DRIVER=1

# Enable MPTCP for all Golang applications.
# 0: disable MPTCP on dialers and listeners by default
# 1: enable MPTCP on dialers and listeners by default
# 2: enable MPTCP on listeners only by default
# 3: enable MPTCP on dialers only by default
# Default: 2 since v1.24
if [[ -z $GODEBUG ]]; then
    export GODEBUG=multipathtcp=1
elif [[ ! $GODEBUG =~ "multipathtcp" ]]; then
    export GODEBUG=multipathtcp=1,$GODEBUG
fi

# https://github.com/HansKristian-Work/vkd3d-proton#behavior-of-id3d12pipelinelibrary
if [[ -z $VKD3D_CONFIG ]]; then
    export VKD3D_CONFIG=pipeline_library_app_cache
elif [[ ! $VKD3D_CONFIG =~ "multipathtcp" ]]; then
    export VKD3D_CONFIG=pipeline_library_app_cache,$VKD3D_CONFIG
fi

export DXVK_HDR=1

# vim: ft=bash sw=4 ts=8 sts=4 et:
# kate: space-indent on; indent-width 4; syntax bash;
