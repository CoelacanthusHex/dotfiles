#compdef hashcat

_hashcat_arglist=(
	{'(--hash-type)-m','(-m)--hash-type'}'[Hash-type]:select hash type:->hash_type'
	{'(--attack-mode)-a','(-a)--attack-mode'}'[Attack-mode]:select attack mode:->attack_mode'
	'--quiet[Suppress output]'
	'--hex-charset[Assume charset is given in hex]'
	'--hex-salt[Assume salt is given in hex]'
	'--hex-wordlist[Assume words in wordlist are given in hex]'
	'--force[Ignore warnings]'
	'--status[Enable automatic update of the status screen]'
	'--status-timer[Sets seconds between status screen updates to X]:type seconds:()'
	'--stdin-timeout-abort[Abort if there is no input from stdin for X seconds]:type seconds:()'
	'--machine-readable[Display the status view in a machine-readable format]'
	'--keep-guessing[Keep guessing the hash after it has been cracked]'
	'--self-test-disable[Disable self-test functionality on startup]'
	'--loopback[Add new plains to induct directory]'
	'--markov-hcstat2[Specify hcstat2 file to use]:select hcstat file:_files'
	'--markov-disable[Disables markov-chains, emulates classic brute-force]'
	'--markov-classic[Enables classic markov-chains, no per-position]'
	{'(--markov-threshold)-t','(-t)--markov-threshold'}'[Threshold X when to stop accepting new markov-chains]:type threshold:()'
	'--runtime[Abort session after X seconds of runtime]:type seconds:()'
	'--session[Define specific session name]:type session name:()'
	'--restore[Restore session from --session]'
	'--restore-disable[Do not write restore file]'
	'--restore-file-path[Specific path to restore file]:select restore file:_files'
	{'(--outfile)-o','(-o)--outfile'}'[Define outfile for recovered hash]:select outfile:_files'
	'--outfile-format[Define outfile-format X for recovered hash]:select outfile format:->outfile_format'
	'--outfile-autohex-disable[Disable the use of $HEX\[\] in output plains]'
	'--outfile-check-timer[Sets seconds between outfile checks to X]:type seconds:()'
	'--wordlist-autohex-disable[Disable the conversion of $HEX\[\] from the wordlist]'
	{'(--separator)-p','(-p)--separator'}'[Separator char for hashlists and outfile]:type separator:()'
	'--stdout[Do not crack a hash, instead print candidates only]'
	'--show[Compare hashlist with potfile; show cracked hashes]'
	'--left[Compare hashlist with potfile; show uncracked hashes]'
	'--username[Enable ignoring of usernames in hashfile]'
	'--remove[Enable removal of hashes once they are cracked]'
	'--remove-timer[Update input hash file each X seconds]:type second:()'
	'--potfile-disable[Do not write potfile]'
	'--potfile-path[Specific path to potfile]:select potfile path:_files'
	'--encoding-from[Force internal wordlist encoding from X]:type code:()'
	'--encoding-to[Force internal wordlist encoding to X]:type code:()'
	'--debug-mode[Defines the debug mode (hybrid only by using rules)]:select debug mode:->debug_mode'
	'--debug-file[Output file for debugging rules]:select file:_files'
	'--induction-dir[Specify the induction directory to use for loopback]:select dir:_files'
	'--outfile-check-dir[Specify the outfile directory to monitor for plains]:select dir:_files'
	'-logfile-disable[Disable the logfile]'
	'--hccapx-message-pair[Load only message pairs from hccapx matching X]:type num:()'
	'--nonce-error-corrections[The BF size range to replace APs nonce last bytes]:type num:()'
	'--keyboard-layout-mapping[Keyboard layout mapping table for special hash-modes]:select file:_files'
	'--truecrypt-keyfiles[Keyfiles to use, separated with commas]:select file:_files'
	'--veracrypt-keyfiles[Keyfiles to use, separated with commas]:select file:_files'
	'--veracrypt-pim[VeraCrypt personal iterations multiplier]:type num:()'
	{'(--benchmark)-b','(-b)--benchmark'}'[Run benchmark of selected hash-modes]'
	'--benchmark-all[Run benchmark of all hash-modes (requires -b)]'
	'--speed-only[Return expected speed of the attack, then quit]'
	'--progress-only[Return ideal progress step size and time to process]'
	{'(--segment-size)-c','(-c)--segment-size'}'[Sets size in MB to cache from the wordfile to X]:type num:()'
	'--bitmap-min[Sets minimum bits allowed for bitmaps to X]:type num:()'
	'--bitmap-max[Sets maximum bits allowed for bitmaps to X]:type num:()'
	'--cpu-affinity[Locks to CPU devices, separated with commas]:type comma separated numbers:()'
	'--example-hashes[Show an example hash for each hash-mode]'
	{'(--opencl-info)-I','(-I)--opencl-info'}'[Show info about detected OpenCL platforms/devices]'
	'--opencl-platforms[OpenCL platforms to use, separated with commas]:type platforms:()'
	{'(--opencl-devices)-d','(-d)--opencl-devices'}'[OpenCL devices to use, separated with commas]:type devices:()'
	{'(--opencl-device-types)-D','(-D)--opencl-device-types'}'[OpenCL device-types to use, separated with commas]:select types of devices:->device_type'
	'--opencl-vector-width[Manually override OpenCL vector-width to X]:type num:()'
	{'(--optimized-kernel-enable)-O','(-O)--optimized-kernel-enable'}'[Enable optimized kernels (limits password length)]'
	{'(--workload-profile)-w','(-w)--workload-profile'}'[Enable a specific workload profile]:select workload profile:->workload_profile'
	{'(---kernel-accel)-n','(-n)--kernel-accel'}'[Manual workload tuning, set outerloop step size to X]:type num:()'
	{'(--kernel-loops)-u','(-u)--kernel-loops'}'[Manual workload tuning, set innerloop step size to X]:type num:()'
	{'(--kernel-threads)-T','(-T)--kernel-threads'}'[Manual workload tuning, set thread count to X]:type num:()'
	'--spin-damp[Use CPU for device synchronization, in percent]:type num:()'
	'--hwmon-disable[Disable temperature and fanspeed reads and triggers]'
	'--hwmon-temp-abort[Abort if temperature reaches X degrees Celsius]:type num:()'
	'--scrypt-tmto[Manually override TMTO value for scrypt to X]:type num:()'
	{'(--skip)-s','(-s)--skip'}'[Skip X words from the start]:type num:()'
	{'(--limit)-l','(-l)--limit'}'[Limit X words from the start + skipped words]:type num:()'
	'--keyspace[Show keyspace base:mod values and quit]'
	{'(--rule-left)-j','(-j)--rule-left'}'[Single rule applied to each word from left wordlist]:type rule:()'
	{'(--rule-right )-k','(-k)--rule-right '}'[Single rule applied to each word from right wordlist]:type rule:()'
	{'(--rules-file)-r','(-r)--rules-file'}'[Multiple rules applied to each word from wordlists]:select file:_files'
	{'(--generate-rules)-g','(-g)--generate-rules'}'[Generate X random rules]:type num:()'
	'--generate-rules-func-min[Force min X functions per rule]:type num:()'
	'--generate-rules-func-max[Force min X functions per rule]:type num:()'
	'--generate-rules-seed[Force RNG seed set to X ]:type num:()'
	{'(--custom-charset1)-1','(-1)--custom-charset1'}'[User-defined charset ?1]:select charset:->charset'
	{'(--custom-charset2)-2','(-2)--custom-charset2'}'[User-defined charset ?2]:select charset:->charset'
	{'(--custom-charset3)-3','(-3)--custom-charset3'}'[User-defined charset ?3]:select charset:->charset'
	{'(--custom-charset4)-4','(-4)--custom-charset4'}'[User-defined charset ?4]:select charset:->charset'
	{'(--increment)-i','(-i)--increment'}'[Enable mask increment mode]'
	'--increment-min[Start mask incrementing at X]:type num:()'
	'--increment-max[Stop mask incrementing at X]:type num:()'
	{'(--slow-candidates)-S','(-S)--slow-candidates'}'[Enable slower (but advanced) candidate generators]'
	'--brain-server[Enable brain server]'
	{'(--brain-client)-z','(-z)--brain-client'}'[Enable brain client, activates -S]'
	'--brain-client-features[Define brain client features]:select feature:->client_feature'
	'--brain-host[Brain server host (IP or domain)]:type str:()'
	'--brain-port[Brain server port]:type num:()'
	'--brain-password[Brain server authentication password]:type str:()'
	'--brain-session[Overrides automatically calculated brain session]:type num:()'
	'--brain-session-whitelist[Allow given sessions only, separated with commas]:type num:()'
)

_hash_types=(
	'900[MD4, Categoty: Raw Hash]'
	'0[MD5, Categoty: Raw Hash]'
	'5100[Half MD5, Categoty: Raw Hash]'
	'100[SHA1, Categoty: Raw Hash]'
	'1300[SHA2-224, Categoty: Raw Hash]'
	'1400[SHA2-256, Categoty: Raw Hash]'
	'10800[SHA2-384, Categoty: Raw Hash]'
	'1700[SHA2-512, Categoty: Raw Hash]'
	'17300[SHA3-224, Categoty: Raw Hash]'
	'17400[SHA3-256, Categoty: Raw Hash]'
	'17500[SHA3-384, Categoty: Raw Hash]'
	'17600[SHA3-512, Categoty: Raw Hash]'
	'17700[Keccak-224, Categoty: Raw Hash]'
	'17800[Keccak-256, Categoty: Raw Hash]'
	'17900[Keccak-384, Categoty: Raw Hash]'
	'18000[Keccak-512, Categoty: Raw Hash]'
	'600[BLAKE2b-512, Categoty: Raw Hash]'
	'10100[SipHash, Categoty: Raw Hash]'
	'6000[RIPEMD-160, Categoty: Raw Hash]'
	'6100[Whirlpool, Categoty: Raw Hash]'
	'6900[GOST R 34.11-94, Categoty: Raw Hash]'
	'11700[GOST R 34.11-2012 (Streebog) 256-bit, big-endian, Categoty: Raw Hash]'
	'11800[GOST R 34.11-2012 (Streebog) 512-bit, big-endian, Categoty: Raw Hash]'
	'10[md5($pass.$salt), Categoty: Raw Hash, Salted and/or Iterated]'
	'20[md5($salt.$pass), Categoty: Raw Hash, Salted and/or Iterated]'
	'30[md5(utf16le($pass).$salt), Categoty: Raw Hash, Salted and/or Iterated]'
	'40[md5($salt.utf16le($pass)), Categoty: Raw Hash, Salted and/or Iterated]'
	'3800[md5($salt.$pass.$salt), Categoty: Raw Hash, Salted and/or Iterated]'
	'3710[md5($salt.md5($pass)) , Categoty: Raw Hash, Salted and/or Iterated]'
	'4010[md5($salt.md5($salt.$pass)), Categoty: Raw Hash, Salted and/or Iterated]'
	'4110[md5($salt.md5($pass.$salt)), Categoty: Raw Hash, Salted and/or Iterated]'
	'2600[md5(md5($pass)), Categoty: Raw Hash, Salted and/or Iterated]'
	'3910[md5(md5($pass).md5($salt)), Categoty: Raw Hash, Salted and/or Iterated]'
	'4300[md5(strtoupper(md5($pass))), Categoty: Raw Hash, Salted and/or Iterated]'
	'4400[md5(sha1($pass)), Categoty: Raw Hash, Salted and/or Iterated]'
	'110[sha1($pass.$salt), Categoty: Raw Hash, Salted and/or Iterated]'
	'120[sha1($salt.$pass), Categoty: Raw Hash, Salted and/or Iterated]'
	'130[sha1(utf16le($pass).$salt), Categoty: Raw Hash, Salted and/or Iterated]'
	'140[sha1($salt.utf16le($pass)), Categoty: Raw Hash, Salted and/or Iterated]'
	'4500[sha1(sha1($pass)), Categoty: Raw Hash, Salted and/or Iterated]'
	'4520[sha1($salt.sha1($pass)), Categoty: Raw Hash, Salted and/or Iterated]'
	'4700[sha1(md5($pass)), Categoty: Raw Hash, Salted and/or Iterated]'
	'4900[sha1($salt.$pass.$salt), Categoty: Raw Hash, Salted and/or Iterated]'
	'14400[sha1(CX), Categoty: Raw Hash, Salted and/or Iterated]'
	'1410[sha256($pass.$salt), Categoty: Raw Hash, Salted and/or Iterated]'
	'1420[sha256($salt.$pass), Categoty: Raw Hash, Salted and/or Iterated]'
	'1430[sha256(utf16le($pass).$salt), Categoty: Raw Hash, Salted and/or Iterated]'
	'1440[sha256($salt.utf16le($pass)), Categoty: Raw Hash, Salted and/or Iterated]'
	'1710[sha512($pass.$salt), Categoty: Raw Hash, Salted and/or Iterated]'
	'1720[sha512($salt.$pass), Category: Raw Hash, Salted and/or Iterated]'
	'1730[sha512(utf16le($pass).$salt), Category: Raw Hash, Salted and/or Iterated]'
	'1740[sha512($salt.utf16le($pass)), Category: Raw Hash, Salted and/or Iterated]'
	'50[HMAC-MD5 (key = $pass), Category: Raw Hash, Authenticated]'
	'60[HMAC-MD5 (key = $salt), Category: Raw Hash, Authenticated]'
	'150[HMAC-SHA1 (key = $pass), Category: Raw Hash, Authenticated]'
	'160[HMAC-SHA1 (key = $salt), Category: Raw Hash, Authenticated]'
	'1450[HMAC-SHA256 (key = $pass), Category: Raw Hash, Authenticated]'
	'1460[HMAC-SHA256 (key = $salt), Category: Raw Hash, Authenticated]'
	'1750[HMAC-SHA512 (key = $pass), Category: Raw Hash, Authenticated]'
	'1760[HMAC-SHA512 (key = $salt), Category: Raw Hash, Authenticated]'
	'11750[HMAC-Streebog-256 (key = $pass), big-endian, Category: Raw Hash, Authenticated]'
	'11760[HMAC-Streebog-256 (key = $salt), big-endian, Category: Raw Hash, Authenticated]'
	'11850[HMAC-Streebog-512 (key = $pass), big-endian, Category: Raw Hash, Authenticated]'
	'11860[HMAC-Streebog-512 (key = $salt), big-endian, Category: Raw Hash, Authenticated]'
	'14000[DES (PT = $salt, key = $pass), Category: Raw Cipher, Known-Plaintext attack]'
	'14100[3DES (PT = $salt, key = $pass), Category: Raw Cipher, Known-Plaintext attack]'
	'14900[Skip32 (PT = $salt, key = $pass), Category: Raw Cipher, Known-Plaintext attack]'
	'15400[ChaCha20, Category: Raw Cipher, Known-Plaintext attack]'
	'400[phpass, Category: Generic KDF]'
	'8900[scrypt, Category: Generic KDF]'
	'11900[PBKDF2-HMAC-MD5, Category: Generic KDF]'
	'12000[PBKDF2-HMAC-SHA1, Category: Generic KDF]'
	'10900[PBKDF2-HMAC-SHA256, Category: Generic KDF]'
	'12100[PBKDF2-HMAC-SHA512, Category: Generic KDF]'
	'23[Skype, Category: Network Protocols]'
	'2500[WPA-EAPOL-PBKDF2, Category: Network Protocols]'
	'2501[WPA-EAPOL-PMK, Category: Network Protocols]'
	'16800[WPA-PMKID-PBKDF2, Category: Network Protocols]'
	'16801[WPA-PMKID-PMK, Category: Network Protocols]'
	'4800[iSCSI CHAP authentication, MD5(CHAP), Category: Network Protocols]'
	'5300[IKE-PSK MD5, Category: Network Protocols]'
	'5400[IKE-PSK SHA1, Category: Network Protocols]'
	'5500[NetNTLMv1, Category: Network Protocols]'
	'5500[NetNTLMv1+ESS, Category: Network Protocols]'
	'5600[NetNTLMv2, Category: Network Protocols]'
	'7300[IPMI2 RAKP HMAC-SHA1, Category: Network Protocols]'
	'7500[Kerberos 5 AS-REQ Pre-Auth etype 23, Category: Network Protocols]'
	'8300[DNSSEC (NSEC3), Category: Network Protocols]'
	'10200[CRAM-MD5, Category: Network Protocols]'
	'11100[PostgreSQL CRAM (MD5), Category: Network Protocols]'
	'11200[MySQL CRAM (SHA1), Category: Network Protocols]'
	'11400[SIP digest authentication (MD5), Category: Network Protocols]'
	'13100[Kerberos 5 TGS-REP etype 23, Category: Network Protocols]'
	'16100[TACACS+, Category: Network Protocols]'
	'16500[JWT (JSON Web Token), Category: Network Protocols]'
	'18200[Kerberos 5 AS-REP etype 23, Category: Network Protocols]'
	'121[SMF (Simple Machines Forum) > v1.1, Category: Forums, CMS, E-Commerce, Frameworks]'
	'400[phpBB3 (MD5), Category: Forums, CMS, E-Commerce, Frameworks]'
	'2611[vBulletin < v3.8.5, Category: Forums, CMS, E-Commerce, Frameworks]'
	'2711[vBulletin >= v3.8.5, Category: Forums, CMS, E-Commerce, Frameworks]'
	'2811[MyBB 1.2+, Category: Forums, CMS, E-Commerce, Frameworks]'
	'2811[IPB2+ (Invision Power Board), Category: Forums, CMS, E-Commerce, Frameworks]'
	'8400[WBB3 (Woltlab Burning Board), Category: Forums, CMS, E-Commerce, Frameworks]'
	'11[Joomla < 2.5.18, Category: Forums, CMS, E-Commerce, Frameworks]'
	'400[Joomla >= 2.5.18 (MD5), Category: Forums, CMS, E-Commerce, Frameworks]'
	'400[WordPress (MD5), Category: Forums, CMS, E-Commerce, Frameworks]'
	'2612[PHPS, Category: Forums, CMS, E-Commerce, Frameworks]'
	'7900[Drupal7, Category: Forums, CMS, E-Commerce, Frameworks]'
	'21[osCommerce, Category: Forums, CMS, E-Commerce, Frameworks]'
	'21[xt:Commerce, Category: Forums, CMS, E-Commerce, Frameworks]'
	'11000[PrestaShop, Category: Forums, CMS, E-Commerce, Frameworks]'
	'124[Django (SHA-1), Category: Forums, CMS, E-Commerce, Frameworks]'
	'10000[Django (PBKDF2-SHA256), Category: Forums, CMS, E-Commerce, Frameworks]'
	'16000[Tripcode, Category: Forums, CMS, E-Commerce, Frameworks]'
	'3711[MediaWiki B type, Category: Forums, CMS, E-Commerce, Frameworks]'
	'13900[OpenCart, Category: Forums, CMS, E-Commerce, Frameworks]'
	'4521[Redmine, Category: Forums, CMS, E-Commerce, Frameworks]'
	'4522[PunBB, Category: Forums, CMS, E-Commerce, Frameworks]'
	'12001[Atlassian (PBKDF2-HMAC-SHA1), Category: Forums, CMS, E-Commerce, Frameworks]'
	'12[PostgreSQL, Category: Database Server]'
	'131[MSSQL (2000), Category: Database Server]'
	'132[MSSQL (2005), Category: Database Server]'
	'1731[MSSQL (2012, 2014), Category: Database Server]'
	'200[MySQL323, Category: Database Server]'
	'300[MySQL4.1/MySQL5, Category: Database Server]'
	'3100[Oracle H: Type (Oracle 7+), Category: Database Server]'
	'112[Oracle S: Type (Oracle 11+), Category: Database Server]'
	'12300[Oracle T: Type (Oracle 12+), Category: Database Server]'
	'8000[Sybase ASE, Category: Database Server]'
	'141[Episerver 6.x < .NET 4, Category: HTTP, SMTP, LDAP Server]'
	'1441[Episerver 6.x >= .NET 4, Category: HTTP, SMTP, LDAP Server]'
	'1600[Apache $apr1$ MD5, md5apr1, MD5 (APR), Category: HTTP, SMTP, LDAP Server]'
	'12600[ColdFusion 10+, Category: HTTP, SMTP, LDAP Server]'
	'1421[hMailServer, Category: HTTP, SMTP, LDAP Server]'
	'101[nsldap, SHA-1(Base64), Netscape LDAP SHA, Category: HTTP, SMTP, LDAP Server]'
	'111[nsldaps, SSHA-1(Base64), Netscape LDAP SSHA, Category: HTTP, SMTP, LDAP Server]'
	'1411[SSHA-256(Base64), LDAP {SSHA256}, Category: HTTP, SMTP, LDAP Server]'
	'1711[SSHA-512(Base64), LDAP {SSHA512}, Category: HTTP, SMTP, LDAP Server]'
	'16400[CRAM-MD5 Dovecot, Category: HTTP, SMTP, LDAP Server]'
	'15000[FileZilla Server >= 0.9.55, Category: FTP Server]'
	'11500[CRC32, Category: Checksums]'
	'3000[LM, Category: Operating Systems]'
	'1000[NTLM, Category: Operating Systems]'
	'1100[Domain Cached Credentials (DCC), MS Cache, Category: Operating Systems]'
	'2100[Domain Cached Credentials 2 (DCC2), MS Cache 2, Category: Operating Systems]'
	'15300[DPAPI masterkey file v1, Category: Operating Systems]'
	'15900[DPAPI masterkey file v2, Category: Operating Systems]'
	'12800[MS-AzureSync  PBKDF2-HMAC-SHA256, Category: Operating Systems]'
	'1500[descrypt, DES (Unix), Traditional DES, Category: Operating Systems]'
	'12400[BSDi Crypt, Extended DES, Category: Operating Systems]'
	'500[md5crypt, MD5 (Unix), Cisco-IOS $1$ (MD5), Category: Operating Systems]'
	'3200[bcrypt $2*$, Blowfish (Unix), Category: Operating Systems]'
	'7400[sha256crypt $5$, SHA256 (Unix), Category: Operating Systems]'
	'1800[sha512crypt $6$, SHA512 (Unix), Category: Operating Systems]'
	'122[macOS v10.4, MacOS v10.5, MacOS v10.6, Category: Operating Systems]'
	'1722[macOS v10.7, Category: Operating Systems]'
	'7100[macOS v10.8+ (PBKDF2-SHA512), Category: Operating Systems]'
	'6300[AIX {smd5}, Category: Operating Systems]'
	'6700[AIX {ssha1}, Category: Operating Systems]'
	'6400[AIX {ssha256}, Category: Operating Systems]'
	'6500[AIX {ssha512}, Category: Operating Systems]'
	'2400[Cisco-PIX MD5, Category: Operating Systems]'
	'2410[Cisco-ASA MD5, Category: Operating Systems]'
	'500[Cisco-IOS $1$ (MD5), Category: Operating Systems]'
	'5700[Cisco-IOS type 4 (SHA256), Category: Operating Systems]'
	'9200[Cisco-IOS $8$ (PBKDF2-SHA256), Category: Operating Systems]'
	'9300[Cisco-IOS $9$ (scrypt), Category: Operating Systems]'
	'22[Juniper NetScreen/SSG (ScreenOS), Category: Operating Systems]'
	'501[Juniper IVE, Category: Operating Systems]'
	'15100[Juniper/NetBSD sha1crypt, Category: Operating Systems]'
	'7000[FortiGate (FortiOS), Category: Operating Systems]'
	'5800[Samsung Android Password/PIN, Category: Operating Systems]'
	'13800[Windows Phone 8+ PIN/password, Category: Operating Systems]'
	'8100[Citrix NetScaler, Category: Operating Systems]'
	'8500[RACF, Category: Operating Systems]'
	'7200[GRUB 2, Category: Operating Systems]'
	'9900[Radmin2, Category: Operating Systems]'
	'125[ArubaOS, Category: Operating Systems]'
	'7700[SAP CODVN B (BCODE), Category: Enterprise Application Software (EAS)]'
	'7701[SAP CODVN B (BCODE) via RFC_READ_TABLE, Category: Enterprise Application Software (EAS)]'
	'7800[SAP CODVN F/G (PASSCODE), Category: Enterprise Application Software (EAS)]'
	'7801[SAP CODVN F/G (PASSCODE) via RFC_READ_TABLE, Category: Enterprise Application Software (EAS)]'
	'10300[SAP CODVN H (PWDSALTEDHASH) iSSHA-1, Category: Enterprise Application Software (EAS)]'
	'8600[Lotus Notes/Domino 5, Category: Enterprise Application Software (EAS)]'
	'8700[Lotus Notes/Domino 6, Category: Enterprise Application Software (EAS)]'
	'9100[Lotus Notes/Domino 8, Category: Enterprise Application Software (EAS)]'
	'133[PeopleSoft, Category: Enterprise Application Software (EAS)]'
	'13500[PeopleSoft PS_TOKEN, Category: Enterprise Application Software (EAS)]'
	'11600[7-Zip, Category: Archives]'
	'12500[RAR3-hp, Category: Archives]'
	'13000[RAR5, Category: Archives]'
	'13200[AxCrypt, Category: Archives]'
	'13300[AxCrypt in-memory SHA1, Category: Archives]'
	'13600[WinZip, Category: Archives]'
	'14700[iTunes backup < 10.0, Category: Backup]'
	'14800[iTunes backup >= 10.0, Category: Backup]'
	'6211[TrueCrypt (PBKDF2-HMAC-RIPEMD160, XTS 512 bit pure AES), Category: FDE]'
	'6211[TrueCrypt (PBKDF2-HMAC-RIPEMD160, XTS 512 bit pure Serpent), Category: FDE]'
	'6211[TrueCrypt (PBKDF2-HMAC-RIPEMD160, XTS 512 bit pure Twofish), Category: FDE]'
	'6212[TrueCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit pure AES), Category: FDE]'
	'6212[TrueCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit pure Serpent), Category: FDE]'
	'6212[TrueCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit pure Twofish), Category: FDE]'
	'6212[TrueCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit cascaded AES-Twofish), Category: FDE]'
	'6212[TrueCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit cascaded Serpent-AES), Category: FDE]'
	'6212[TrueCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit cascaded Twofish-Serpent), Category: FDE]'
	'6213[TrueCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1536 bit all), Category: FDE]'
	'6221[TrueCrypt (PBKDF2-HMAC-SHA512, XTS 512 bit pure AES), Category: FDE]'
	'6221[TrueCrypt (PBKDF2-HMAC-SHA512, XTS 512 bit pure Serpent), Category: FDE]'
	'6221[TrueCrypt (PBKDF2-HMAC-SHA512, XTS 512 bit pure Twofish), Category: FDE]'
	'6222[TrueCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit pure AES), Category: FDE]'
	'6222[TrueCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit pure Serpent), Category: FDE]'
	'6222[TrueCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit pure Twofish), Category: FDE]'
	'6222[TrueCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit cascaded AES-Twofish), Category: FDE]'
	'6222[TrueCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit cascaded Serpent-AES), Category: FDE]'
	'6222[TrueCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit cascaded Twofish-Serpent), Category: FDE]'
	'6223[TrueCrypt (PBKDF2-HMAC-SHA512, XTS 1536 bit all), Category: FDE]'
	'6231[TrueCrypt (PBKDF2-HMAC-Whirlpool, XTS 512 bit pure AES), Category: FDE]'
	'6231[TrueCrypt (PBKDF2-HMAC-Whirlpool, XTS 512 bit pure Serpent), Category: FDE]'
	'6231[TrueCrypt (PBKDF2-HMAC-Whirlpool, XTS 512 bit pure Twofish), Category: FDE]'
	'6232[TrueCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit pure AES), Category: FDE]'
	'6232[TrueCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit pure Serpent), Category: FDE]'
	'6232[TrueCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit pure Twofish), Category: FDE]'
	'6232[TrueCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit cascaded AES-Twofish), Category: FDE]'
	'6232[TrueCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit cascaded Serpent-AES), Category: FDE]'
	'6232[TrueCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit cascaded Twofish-Serpent), Category: FDE]'
	'6233[TrueCrypt (PBKDF2-HMAC-Whirlpool, XTS 1536 bit all), Category: FDE]'
	'6241[TrueCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 512 bit pure AES), Category: FDE]'
	'6241[TrueCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 512 bit pure Serpent), Category: FDE]'
	'6241[TrueCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 512 bit pure Twofish), Category: FDE]'
	'6242[TrueCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit pure AES), Category: FDE]'
	'6242[TrueCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit pure Serpent), Category: FDE]'
	'6242[TrueCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit pure Twofish), Category: FDE]'
	'6242[TrueCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit cascaded AES-Twofish), Category: FDE]'
	'6242[TrueCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit cascaded Serpent-AES), Category: FDE]'
	'6242[TrueCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit cascaded Twofish-Serpent), Category: FDE]'
	'6243[TrueCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1536 bit all), Category: FDE]'
	'8800[Android FDE <= 4.3, Category: FDE]'
	'12900[Android FDE (Samsung DEK), Category: FDE]'
	'12200[eCryptfs, Category: FDE]'
	'13711[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 512 bit pure AES), Category: FDE]'
	'13711[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 512 bit pure Serpent), Category: FDE]'
	'13711[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 512 bit pure Twofish), Category: FDE]'
	'13711[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 512 bit pure Camellia), Category: FDE]'
	'13711[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 512 bit pure Kuznyechik), Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit pure AES), Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit pure Serpent), Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit pure Twofish), Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit pure Camellia),Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit pure Kuznyechik), Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit cascaded AES-Twofish), Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit cascaded Camellia-Kuznyechik), Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit cascaded Camellia-Serpent), Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit cascaded Kuznyechik-AES), Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit cascaded Kuznyechik-Twofish), Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit cascaded Serpent-AES), Category: FDE]'
	'13712[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1024 bit cascaded Twofish-Serpent), Category: FDE]'
	'13713[VeraCrypt (PBKDF2-HMAC-RIPEMD160, XTS 1536 bit all), Category: FDE]'
	'13721[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 512 bit pure AES), Category: FDE]'
	'13721[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 512 bit pure Serpent), Category: FDE]'
	'13721[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 512 bit pure Twofish), Category: FDE]'
	'13721[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 512 bit pure Camellia), Category: FDE]'
	'13721[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 512 bit pure Kuznyechik), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit pure AES), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit pure Serpent), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit pure Twofish), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit pure Camellia), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit pure Kuznyechik), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit cascaded AES-Twofish), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit cascaded Camellia-Kuznyechik), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit cascaded Camellia-Serpent), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit cascaded Kuznyechik-AES), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit cascaded Kuznyechik-Twofish), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit cascaded Serpent-AES), Category: FDE]'
	'13722[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1024 bit cascaded Twofish-Serpent), Category: FDE]'
	'13723[VeraCrypt (PBKDF2-HMAC-SHA512, XTS 1536 bit all), Category: FDE]'
	'13731[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 512 bit pure AES), Category: FDE]'
	'13731[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 512 bit pure Serpent), Category: FDE]'
	'13731[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 512 bit pure Twofish), Category: FDE]'
	'13731[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 512 bit pure Camellia), Category: FDE]'
	'13731[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 512 bit pure Kuznyechik), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit pure AES), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit pure Serpent), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit pure Twofish), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit pure Camellia), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit pure Kuznyechik), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit cascaded AES-Twofish), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit cascaded Camellia-Kuznyechik), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit cascaded Camellia-Serpent), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit cascaded Kuznyechik-AES), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit cascaded Kuznyechik-Twofish), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit cascaded Serpent-AES), Category: FDE]'
	'13732[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1024 bit cascaded Twofish-Serpent), Category: FDE]'
	'13733[VeraCrypt (PBKDF2-HMAC-Whirlpool, XTS 1536 bit all), Category: FDE]'
	'13741[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 512 bit pure AES), Category: FDE]'
	'13741[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 512 bit pure Serpent), Category: FDE]'
	'13741[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 512 bit pure Twofish), Category: FDE]'
	'13741[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 512 bit pure Camellia), Category: FDE]'
	'13741[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 512 bit pure Kuznyechik), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit pure AES), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit pure Serpent), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit pure Twofish), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit pure Camellia), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit pure Kuznyechik), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit cascaded AES-Twofish), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit cascaded Camellia-Kuznyechik), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit cascaded Camellia-Serpent), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit cascaded Kuznyechik-AES), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit cascaded Kuznyechik-Twofish), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit cascaded Serpent-AES), Category: FDE]'
	'13742[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1024 bit cascaded Twofish-Serpent), Category: FDE]'
	'13743[VeraCrypt (PBKDF2-HMAC-RIPEMD160 + boot-mode, XTS 1536 bit all), Category: FDE]'
	'13751[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 512 bit pure AES), Category: FDE]'
	'13751[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 512 bit pure Serpent), Category: FDE]'
	'13751[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 512 bit pure Twofish), Category: FDE]'
	'13751[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 512 bit pure Camellia), Category: FDE]'
	'13751[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 512 bit pure Kuznyechik), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit pure AES), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit pure Serpent), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit pure Twofish), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit pure Camellia), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit pure Kuznyechik), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit cascaded AES-Twofish), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit cascaded Camellia-Kuznyechik), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit cascaded Camellia-Serpent), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit cascaded Kuznyechik-AES), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit cascaded Kuznyechik-Twofish), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit cascaded Serpent-AES), Category: FDE]'
	'13752[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1024 bit cascaded Twofish-Serpent), Category: FDE]'
	'13753[VeraCrypt (PBKDF2-HMAC-SHA256, XTS 1536 bit all), Category: FDE]'
	'13761[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 512 bit pure AES), Category: FDE]'
	'13761[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 512 bit pure Serpent), Category: FDE]'
	'13761[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 512 bit pure Twofish), Category: FDE]'
	'13761[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 512 bit pure Camellia), Category: FDE]'
	'13761[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 512 bit pure Kuznyechik), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit pure AES), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit pure Serpent), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit pure Twofish), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit pure Camellia), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit pure Kuznyechik), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit cascaded AES-Twofish), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit cascaded Camellia-Kuznyechik), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit cascaded Camellia-Serpent), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit cascaded Kuznyechik-AES), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit cascaded Kuznyechik-Twofish), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit cascaded Serpent-AES), Category: FDE]'
	'13762[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1024 bit cascaded Twofish-Serpent), Category: FDE]'
	'13763[VeraCrypt (PBKDF2-HMAC-SHA256 + boot-mode, XTS 1536 bit all),Category: FDE]'
	'13771[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 512 bit pure AES), Category: FDE]'
	'13771[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 512 bit pure Serpent), Category: FDE]'
	'13771[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 512 bit pure Twofish), Category: FDE]'
	'13771[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 512 bit pure Camellia), Category: FDE]'
	'13771[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 512 bit pure Kuznyechik), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit pure AES), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit pure Serpent), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit pure Twofish), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit pure Camellia), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit pure Kuznyechik), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit cascaded AES-Twofish), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit cascaded Camellia-Kuznyechik), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit cascaded Camellia-Serpent), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit cascaded Kuznyechik-AES), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit cascaded Kuznyechik-Twofish), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit cascaded Serpent-AES), Category: FDE]'
	'13772[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1024 bit cascaded Twofish-Serpent), Category: FDE]'
	'13773[VeraCrypt (PBKDF2-HMAC-Streebog-512, XTS 1536 bit all), Category: FDE]'
	'14600[LUKS, Category: FDE]'
	'16700[FileVault 2, Category: FDE]'
	'18300[Apple File System (APFS), Category: FDE]'
	'9700[MS Office <= 2003 $0/$1, MD5 + RC4, Category: Documents]'
	'9710[MS Office <= 2003 $0/$1, MD5 + RC4, collider #1, Category: Documents]'
	'9720[MS Office <= 2003 $0/$1, MD5 + RC4, collider #2, Category: Documents]'
	'9800[MS Office <= 2003 $3/$4, SHA1 + RC4, Category: Documents]'
	'9810[MS Office <= 2003 $3, SHA1 + RC4, collider #1, Category: Documents]'
	'9820[MS Office <= 2003 $3, SHA1 + RC4, collider #2, Category: Documents]'
	'9400[MS Office 2007, Category: Documents]'
	'9500[MS Office 2010, Category: Documents]'
	'9600[MS Office 2013, Category: Documents]'
	'10400[PDF 1.1 - 1.3 (Acrobat 2 - 4), Category: Documents]'
	'10410[PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #1, Category: Documents]'
	'10420[PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #2, Category: Documents]'
	'10500[PDF 1.4 - 1.6 (Acrobat 5 - 8), Category: Documents]'
	'10600[PDF 1.7 Level 3 (Acrobat 9), Category: Documents]'
	'10700[PDF 1.7 Level 8 (Acrobat 10 - 11), Category: Documents]'
	'16200[Apple Secure Notes, Category: Documents]'
	'9000[Password Safe v2, Category: Password Managers]'
	'5200[Password Safe v3, Category: Password Managers]'
	'6800[LastPass + LastPass sniffed, Category: Password Managers]'
	'6600[1Password, agilekeychain, Category: Password Managers]'
	'8200[1Password, cloudkeychain, Category: Password Managers]'
	'11300[Bitcoin/Litecoin wallet.dat, Category: Password Managers]'
	'12700[Blockchain, My Wallet, Category: Password Managers]'
	'15200[Blockchain, My Wallet, V2, Category: Password Managers]'
	'16600[Electrum Wallet (Salt-Type 1-3), Category: Password Managers]'
	'13400[KeePass 1 (AES/Twofish) and KeePass 2 (AES), Category: Password Managers]'
	'15500[JKS Java Key Store Private Keys (SHA1), Category: Password Managers]'
	'15600[Ethereum Wallet, PBKDF2-HMAC-SHA256, Category: Password Managers]'
	'15700[Ethereum Wallet, SCRYPT, Category: Password Managers]'
	'16300[Ethereum Pre-Sale Wallet, PBKDF2-HMAC-SHA256, Category: Password Managers]'
	'16900[Ansible Vault, Category: Password Managers]'
	'18100[TOTP (HMAC-SHA1), Category: One-Time Passwords]'
	'99999[Plaintext, Category: Plaintext]'
)

_attack_modes=(
	'0[Straight]'
	'1[Combination]'
	'3[Brute-force]'
	'6[Hybrid Wordlist + Mask]'
	'7[Hybrid Mask + Wordlist]'
)

_outfile_formats=(
	'1[hash\[:salt\]]'
	'2[plain]'
	'3[hash\[:salt\]:plain]'
	'4[hex_plain]'
	'5[hash\[:salt\]:hex_plain]'
	'6[plain:hex_plain]'
	'7[hash\[:salt\]:plain:hex_plain]'
	'8[crackpos]'
	'9[hash\[:salt\]:crack_pos]'
	'10[plain:crack_pos]'
	'11[hash\[:salt\]:plain:crack_pos]'
	'12[hex_plain:crack_pos]'
	'13[hash\[:salt\]:hex_plain:crack_pos]'
	'14[plain:hex_plain:crack_pos]'
	'15[hash\[:salt\]:plain:hex_plain:crack_pos]'
)

_rule_debugging_modes=(
	'1[Finding-Rule]'
	'2[Original-Word]'
	'3[Original-Word:Finding-Rule]'
	'4[Original-Word:Finding-Rule:Processed-Word]'
)

_device_types=(
	'1[CPU]'
	'2[GPU]'
	'3[FPGA, DSP, Co-Processor]'
)

_workload_profiles=(
	'1[Pefromance: Low]'
	'2[Pefromance: Default]'
	'3[Pefromance: High]'
	'4[Pefromance: Nightmare]'
)

_charsets="?l | abcdefghijklmnopqrstuvwxyz
?u | ABCDEFGHIJKLMNOPQRSTUVWXYZ
?d | 0123456789
?h | 0123456789abcdef
?H | 0123456789ABCDEF
?s | Non alphabet symbols
?a | ?l?u?d?s
?b | 0x00 - 0xff
"

_brain_client_features=(
	'1[Send hashed passwords]'
	'2[Send attack positions]'
	'3[Send hashed passwords and attack positions]'
)

_hashcat() {
	_arguments $_hashcat_arglist
	case "$state" in
		hash_type)
			_values 'hash type' $_hash_types
			;;
		attack_mode)
			_values 'attack mode' $_attack_modes
			;;
		outfile_format)
			_values 'outfile_format' $_outfile_formats
			;;
		debug_mode)
			_values 'debug_mode' $_rule_debugging_modes
			;;
		device_type)
			_values -s ',' 'device_type' $_device_types
			;;
		workload_profile)
			_values 'workload profile' $_workload_profiles
			;;
		charset)
			_message -r $_charsets
			;;
		client_feature)
			_values 'client_feature' $_brain_client_features
			;;
		*)
			_files
			;;
	esac
}

case "$service" in
	hashcat)
		_hashcat "$@" && return 0
		;;
esac
