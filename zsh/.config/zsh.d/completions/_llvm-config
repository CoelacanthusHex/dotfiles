#compdef llvm-config

# -----------------------------------------------------------------------------
# The BSD-3-Clause License
#
# Copyright (c) 2016, Koichi Shiraishi
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of que nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
# USAGE:
#
# llvm-config <OPTION>... [<COMPONENT>...]
#
# Get various configuration information needed to compile programs which use
# LLVM.  Typically called from 'configure' scripts.  Examples:
#   llvm-config --cxxflags
#   llvm-config --ldflags
#   llvm-config --libs engine bcreader scalaropts
#
# Options:
#   --version         Print LLVM version.
#   --prefix          Print the installation prefix.
#   --src-root        Print the source root LLVM was built from.
#   --obj-root        Print the object root used to build LLVM.
#   --bindir          Directory containing LLVM executables.
#   --includedir      Directory containing LLVM headers.
#   --libdir          Directory containing LLVM libraries.
#   --cppflags        C preprocessor flags for files that include LLVM headers.
#   --cflags          C compiler flags for files that include LLVM headers.
#   --cxxflags        C++ compiler flags for files that include LLVM headers.
#   --ldflags         Print Linker flags.
#   --system-libs     System Libraries needed to link against LLVM components.
#   --libs            Libraries needed to link against LLVM components.
#   --libnames        Bare library names for in-tree builds.
#   --libfiles        Fully qualified library filenames for makefile depends.
#   --components      List of all possible components.
#   --targets-built   List of all targets currently built.
#   --host-target     Target triple used to configure LLVM.
#   --build-mode      Print build mode of LLVM tree (e.g. Debug or Release).
#   --assertion-mode  Print assertion mode of LLVM tree (ON or OFF).
#   --build-system    Print the build system used to build LLVM (always cmake).
#   --has-rtti        Print whether or not LLVM was built with rtti (YES or NO).
#   --has-global-isel Print whether or not LLVM was built with global-isel support (YES or NO).
#   --shared-mode     Print how the provided components can be collectively linked (`shared` or `static`).
#   --link-shared     Link the components as shared libraries.
#   --link-static     Link the component libraries statically.
# Typical components:
#   all               All LLVM libraries (default).
#   engine            Either a native JIT or a bitcode interpreter.
# -----------------------------------------------------------------------------

function _llvm-config() {
  local context curcontext=$curcontext state line ret=1
  declare -A opt_args

  _arguments -C \
    '--version[Print LLVM version]' \
    '--prefix[Print the installation prefix]' \
    '--src-root[Print the source root LLVM was built from]' \
    '--obj-root[Print the object root used to build LLVM]' \
    '--bindir[Directory containing LLVM executables]' \
    '--includedir[Directory containing LLVM headers]' \
    '--libdir[Directory containing LLVM libraries]' \
    '--cppflags[C preprocessor flags for files that include LLVM headers]' \
    '--cflags[C compiler flags for files that include LLVM headers]' \
    '--cxxflags[C++ compiler flags for files that include LLVM headers]' \
    '--ldflags[Print Linker flags]' \
    '--system-libs[System Libraries needed to link against LLVM components]' \
    '--libs[Libraries needed to link against LLVM components]' \
    '--libnames[Bare library names for in-tree builds]' \
    '--libfiles[Fully qualified library filenames for makefile depends]' \
    '--components[List of all possible components]' \
    '--targets-built[List of all targets currently built]' \
    '--host-target[Target triple used to configure LLVM]' \
    '--build-mode[Print build mode of LLVM tree (e.g. Debug or Release)]' \
    '--assertion-mode[Print assertion mode of LLVM tree (ON or OFF)]' \
    '--build-system[Print the build system used to build LLVM (always cmake)]' \
    '--has-rtti[Print whether or not LLVM was built with rtti (YES or NO)]' \
    '--has-global-isel[Print whether or not LLVM was built with global-isel support (YES or NO)]' \
    '--shared-mode[Print how the provided components can be collectively linked (shared or static)]' \
    '--link-shared[Link the components as shared libraries]' \
    '--link-static[Link the component libraries statically]' \
    "*::llvm components:($(llvm-config --components))" \
    && ret=0

  return ret
}

_llvm-config "$*"

# vim:ft=zsh:et:sts=2:sw=2
