format = """
$username\
$hostname\
$shlvl\
$kubernetes\
$directory\
$vcsh\
$git_branch\
$git_commit\
$git_state\
$git_status\
$hg_branch\
$docker_context\
$package\
$cmake\
$crystal\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$golang\
$helm\
$java\
$julia\
$kotlin\
$nim\
$nodejs\
$ocaml\
$perl\
$php\
$purescript\
$python\
$red\
$ruby\
$rust\
$scala\
$swift\
$lua\
$terraform\
$vlang\
$vagrant\
$zig\
$nix_shell\
$conda\
$memory_usage\
$aws\
$gcloud\
$openstack\
$env_var\
$custom\
$shell\
$cmd_duration\
$jobs\
$battery\
$time\
$status\
$line_break\
$character"""


continuation_prompt = "[>>>](bold yellow) "

[aws]
symbol = "AWS "

[battery]
format = "[Battery $percentage]($style) "

[character]
success_symbol = "[>>>](bold green)"
error_symbol = "[>>>](bold red)"
vicmd_symbol = "[<<<](bold green)"

[cobol]
symbol = "Conda "

[conda]
symbol = "COBOL "

[crystal]
symbol = "Crystal "

[cmake]
symbol = "CMake "

[dart]
symbol = "Dart "

[deno]
symbol = "Deno "

[dotnet]
symbol = ".NET "

[directory]
read_only = " ro"
truncation_length = 4
truncate_to_repo = false
# using fish style path truncation
fish_style_pwd_dir_length = 1
# using logical path insetad of resolving symbol link 
use_logical_path = true

[docker_context]
symbol = "docker "

[elixir]
symbol = "elixir "

[elm]
symbol = "elm "

[erlang]
symbol = "Erlang "

[gcloud]
symbol = "GoogleCloud "

[git_branch]
symbol = "git "

[git_commit]
commit_hash_length = 8
tag_symbol = " tag "

[git_status]
format = '([\[ $all_status[|](purple) $ahead_behind \]]($style) )'
# ASCII
#ahead = "[>${count}](green)"
#behind = "[<${count}](red)"
#diverged = "[<${behind_count}](red)[>${ahead_count}](green)"
#untracked = "?${count} "
#stashed = "$${count} "
#modified = "[!${count}](blue) "
#staged = '[++\($count\)](green) '
#renamed = "[R${count}](yellow) "
#deleted = "[x${count}](red) "
# Unicode
ahead = "[↑${count}](green)"
behind = "[↓${count}](red)"
diverged = "⇕[↑${ahead_count}](green)[↓${behind_count}](red)"
untracked = "?${count} "
stashed = "$${count} "
modified = "[!${count}](blue) "
staged = '[++\($count\)](green) '
renamed = "[R${count}](yellow) "
deleted = "[✘${count}](red) "

[golang]
symbol = "Go "

[hg_branch]
symbol = "hg "

[hostname]
ssh_only = false
format = "@ [$hostname]($style) in "

[java]
symbol = "Java "

[julia]
symbol = "julia "

[kotlin]
symbol = "Kotlin "

[kubernetes]
symbol = "k8s "

[lua]
symbol = "Lua "

[nodejs]
symbol = "NodeJS "

[memory_usage]
symbol = "Memory "

[nim]
symbol = "Nim "

[nix_shell]
symbol = "Nix "

[ocaml]
symbol = "OCaml "

[openstack]
symbol = "OpenStack "

[package]
symbol = "pkg "

[perl]
symbol = "Perl "

[php]
symbol = "PHP "

[pulumi]
symbol = "Pulumi "

[purescript]
symbol = "PureScript "

[python]
symbol = "Python "

[rlang]
symbol = "R "

[ruby]
symbol = "Ruby "

[rust]
symbol = "Rust "

[scala]
symbol = "Scala "

[shell]
disabled = false
format = "in [\\[$indicator\\]]($style) "
style = "blue bold"
bash_indicator = "Bash"
fish_indicator = "Fish"
zsh_indicator = "Zsh"
powershell_indicator = "PowerShell"
ion_indicator = "Ion"
elvish_indicator = "elvish"
tcsh_indicator = "tcsh"
xonsh_indicator = "Xonsh"
cmd_indicator = "CMD"
nu_indicator = "NuShell"
unknown_indicator = "Unknown Shell"

[status]
disabled = false
style = "bold blue"
format = "[$symbol [->](white) [$common_meaning$signal_name](red) $hex_status]($style) "
symbol = "[X](red)"
success_symbol = "[!](green)"
pipestatus = true
pipestatus_format = "\\[ $pipestatus\\] => [$symbol [->](white) [$common_meaning$signal_name](red) $hex_status]($style)"
pipestatus_separator = "| "

[sudo]
symbol = "sudo "

[swift]
symbol = "Swift "

[terraform]
symbol = "Terraform "

[time]
disabled = false

[username]
show_always = true
format = "[$user]($style) "

[vagrant]
symbol = "Vagrant "

[zig]
symbol = "Zig "
