#!/hint/bash

# set terminal title
set -g set-titles on

# enable mouse support
set -g mouse on

# https://www.reddit.com/r/tmux/comments/cpvd02/can_i_pass_only_mousescroll_to_shell/
# Basically, on a wheelup event:  
#   if mouse is enabled, send the mouse event,  
#   else if we're in an alternate screen program, send the up key,  
#   else if pane is in copy mode, send the mouse event,  
#   else put the current pane into copy mode and send the mouse event.  
# Nested ifs are not fun.  
bind -n WheelUpPane if-shell -Ft= "#{mouse_any_flag}" "send-keys -M" "if-shell -Ft= '#{alternate_on}' 'send-keys -t= up' 'if-shell -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"run fcitx5-remote\\\\ -c; select-pane -t=; copy-mode -e; send-keys -M\"'"
# On a wheeldown event, if we're in an alternate screen program, send the down  
# key, else, just send the mouse event  
bind -n WheelDownPane if-shell -Ft= "#{alternate_on}" "send-keys -t= down" "select-pane -t= \; send-keys -M"

# reload config
bind r source-file ~/.config/tmux/tmux.conf \; display 'tmux.conf sourced'

# set 256 colors or truecolor
if-shell "(( $(tput colors) >= 256 ))" "set -g default-terminal tmux-256color"
# 启用上划线和 RGB 支持
if-shell "[[ $COLORTERM =~ (24bit|truecolor) ]]" "set -ga terminal-features ',*:RGB:usstyle:overline'"

# boost history
set -g history-limit 50000

## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'

# More friendly split pane
bind-key h split-window -h
bind-key v split-window -v

# set border style
set -g pane-border-lines double

# Theme
set -g status-interval 1
set -g status on
set -g status-justify left
set -g status-style bg=#3B4252,fg=white
set -g pane-border-style bg=default,fg=brightblack
set -g pane-active-border-style bg=default,fg=blue
set -g display-panes-colour black
set -g display-panes-active-colour brightblack
setw -g clock-mode-colour cyan
set -g message-style bg=brightblack,fg=cyan
set -g message-command-style bg=brightblack,fg=cyan
set -g @prefix_highlight_copy_mode_attr "fg=black,bg=brightcyan"
set -g status-left "#{prefix_highlight} #[fg=black,bg=bold][#S] "
set -g status-right "Load:#[fg=green] #(cat /proc/loadavg | cut -f1,2,3 -d' ') #[fg=white,bg=brightblack] %Y-%m-%d #[fg=white,bg=brightblack,nobold,noitalics,nounderscore]|#[fg=white,bg=brightblack] %H:%M #[fg=cyan,bg=brightblack,nobold,noitalics,nounderscore] #[fg=black,bg=cyan,nobold] #H "
set -g window-status-format " #[fg=white,bg=brightblack]#I #[fg=white,bg=brightblack]#W #F"
set -g window-status-current-format "#[fg=black,bg=blue] #I#[fg=black,bg=blue,nobold,noitalics,nounderscore] #[fg=black,bg=blue]#W #F"
set -g window-status-separator " "
set -g status-left-length 100
set -g status-right-length 100

# Prefix Highlight
set -g @prefix_highlight_fg 'white' # default is 'colour231'
set -g @prefix_highlight_bg 'blue'  # default is 'colour04'
set -g @prefix_highlight_empty_has_affixes 'on'
set -g @prefix_highlight_empty_prompt 'Tmux'
set -g @prefix_highlight_output_prefix '< '
set -g @prefix_highlight_output_suffix ' >'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Automatic tpm installation
bind M-i if-shell "test ! -d ~/.local/share/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm && ~/.local/share/tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set-environment -g TMUX_PLUGIN_MANAGER_PATH "~/.local/share/tmux/plugins"
if-shell 'test -d ~/.local/share/tmux/plugins/tpm' "run -b '~/.local/share/tmux/plugins/tpm/tpm'"

# kate: space-indent on; indent-width 4; syntax bash;
